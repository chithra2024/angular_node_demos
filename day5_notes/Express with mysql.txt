npm init -y
npm install express mysql2

-------------------------------
CREATE DATABASE expressdb;

USE expressdb;

CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100)
);

--------------------------------
// mysql-crud.js
const express = require('express');
const mysql = require('mysql2');
const app = express();
app.use(express.json());

// DB connection
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',         // change if needed
  password: '',         // your MySQL password
  database: 'expressdb'
});

db.connect(err => {
  if (err) {
    console.error('Connection failed:', err);
    return;
  }
  console.log('Connected to MySQL');
});

// CREATE user
app.post('/users', (req, res) => {
  const { name, email } = req.body;
  const sql = 'INSERT INTO users (name, email) VALUES (?, ?)';
  db.query(sql, [name, email], (err, result) => {
    if (err) return res.status(500).send(err);
    res.send({ message: 'User created', id: result.insertId });
  });
});

//  READ all users
app.get('/users', (req, res) => {
  db.query('SELECT * FROM users', (err, results) => {
    if (err) return res.status(500).send(err);
    res.json(results);
  });
});

//  READ single user
app.get('/users/:id', (req, res) => {
  db.query('SELECT * FROM users WHERE id = ?', [req.params.id], (err, results) => {
    if (err) return res.status(500).send(err);
    if (results.length === 0) return res.status(404).send({ message: 'User not found' });
    res.json(results[0]);
  });
});

//  UPDATE user
app.put('/users/:id', (req, res) => {
  const { name, email } = req.body;
  const sql = 'UPDATE users SET name = ?, email = ? WHERE id = ?';
  db.query(sql, [name, email, req.params.id], (err, result) => {
    if (err) return res.status(500).send(err);
    res.send({ message: 'User updated' });
  });
});

//  DELETE user
app.delete('/users/:id', (req, res) => {
  db.query('DELETE FROM users WHERE id = ?', [req.params.id], (err, result) => {
    if (err) return res.status(500).send(err);
    res.send({ message: 'User deleted' });
  });
});

// Start server
app.listen(3000, () => console.log('Server running on http://localhost:3000'));
----------------------------------------------------------------------------------------------

Create User    POST    `http://localhost:3000/users`  `{ "name": "Alice", "email": "alice@example.com" }` 
Read All       GET     `http://localhost:3000/users`                  
Read One       GET     `http://localhost:3000/users/1`                 
Update User    PUT     `http://localhost:3000/users/1`  `{ "name": "Alice Updated", "email": "alice@new.com" }` 
Delete User    DELETE  `http://localhost:3000/users/1`             

-----------------------------------------------------------------